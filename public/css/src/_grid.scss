%grid-column {
  position: relative;
  width: 100%;
  padding-right: .5rem;
  padding-left: .5rem;
}

.grid-container {
  display: grid;
  height: 100%;
  grid-template: 
    'sidebar-left header' fit-content(75px)
    'sidebar-left content' auto
    'sidebar-left sidebar-right' 75px
    'sidebar-left footer' 50px
    / auto 1fr;
    &.hide-sidebar {
      grid-template-columns: auto 1fr;
    }
    &.hide-sidebar .sidebar {
      width: 0;
    }
    &.hide-sidebar .sidebar-toggle {
      position: fixed;
      top: 5px;
      left: 0;
      right: unset;
      border-radius: 0 5px 5px 0;
      background-color: var(--main-color);
      opacity: .5;
      &:hover {
        opacity: 1;
        color: var(--text-hover-color)
      }
    }
    @include media-breakpoint('lg') {
      grid-template: 
          'sidebar-left header  header' 75px
          'sidebar-left content sidebar-right' auto
          'sidebar-left footer  footer' 50px
          / 1fr 4fr;
      .sidebar {
        width: 100%;
      }
    }
}

.grid {
  display: grid;
  &-dense {
    grid-auto-flow: dense;
  }
  @for $i from 1 through 10 {
    &-gap-#{$i} {
      grid-gap: .25rem * $i;
      margin: .25rem * $i;
    }  
  }
  @for $i from 1 through 12 {
    &-#{$i} {
      grid-template-columns: repeat(#{$i}, 1fr);
    }
    &-column-#{$i} {
      grid-column: span $i;
    }
  }
}

.flex {
  display: flex;
  &-wrap {
    flex-wrap: wrap;
  }
  &-center {
    justify-content: center;
    align-items: center;
  }
  @for $i from 1 through 5 {
    &-gap-#{$i},
    &-gap-#{$i} > * {
      padding-right: .25rem * $i;
      padding-left: .25rem * $i;
    }  
  }
  @for $i from 1 through 5 {
    &-grow-#{$i} {
      flex: $i;
    }
    &-shrink-#{$i} {
      flex: 0 $i;
    }
  }
}

.justify-between {
  justify-content: space-between;
}
.justify-around {
  justify-content: space-around;
}
.justify-evenly {
  justify-content: space-evenly;
}

@each $bp in map-keys($breakpoints-map) {
  $infix: breakpoint-infix($bp);
  @for $i from 1 through 12 {
    .col#{$infix}-#{$i} {
      @extend %grid-column;
    }
  }
  .col#{$infix},
  .col#{$infix}-auto {
    @extend %grid-column;
  }
  @include media-breakpoint($bp) {
    .flex#{$infix}-row {
      flex-direction: row;
    }
    .flex#{$infix}-row-reverse {
      flex-direction: row-reverse;
    }
    .flex#{$infix}-column {
      flex-direction: column;
    }
    .flex#{$infix}-column-reverse {
      flex-direction: column-reverse;
    }
    .col#{$infix} {
      flex: 1 1 0;
      max-width: 100%;
    }
    .col#{$infix}-auto {
      flex: 0 0 auto;
      width: auto;
      max-width: 100%;
    }
    @for $i from 1 through 12 {
      .col#{$infix}-#{$i} {
        flex: 0 0 percentage($i / 12);
        max-width: percentage($i / 12);
      }
    }
  }
}